version: 2.1
jobs:
    build-current:
        docker:
          - image: cimg/base:current
            auth:
                username: mydockerhub-user
                password: $DOCKERHUB_PASSWORD
            environment:
                CMAKE_BUILD_TYPE: Release
                FLAGS: -Wall
                USE_READLINE: OFF
        steps:
            - checkout
            - run:
                name: apt-get update`
                command: sudo apt-get update
            - run:
                name: Install Dependencies
                command: sudo apt-get install libgmp-dev libedit-dev bison flex cmake python3
# I'M COMMENTING SQLLITE, WE DON'T NEED IT FOR NOW
#            - run:
#                name: Install Sqllite
#                command: sudo apt-get install zlib1g-dev libsqlite3-dev
            - run:
                name: Create the build directory
                command: mkdir build
            - run:
                name: Release build gcc
                command: sh ./bin/make_smts.sh
                environment:
                    CMAKE_BUILD_TYPE: Release
            - run:
                name: Run Server - Client Dynamically - gcc release
                command: sh ./bin/run-server-client_dynamically.sh

            - run:
                name: Debug build gcc
                command: sh ./bin/make_smts.sh
                environment:
                    CMAKE_BUILD_TYPE: Debug
                    FLAGS: -Wall -Wextra -fsanitize=signed-integer-overflow,thread,undefined
            - run:
                name: Run Server - Client
                command: sh ./bin/run-server-client.sh
            - run:
                name: Clean build directory
                command: |
                    rm -rf build
                    mkdir build
            - run:
                name: Install clang
                command: |
                    sudo apt-get install clang
                    sudo update-alternatives --install /usr/bin/c++ c++ /usr/bin/clang++ 60
            - run:
                name: Release build llvm
                command: sh ./bin/make_smts.sh
                environment:
                    CMAKE_BUILD_TYPE: Release
            - run:
                name: Run Server - Client Dynamically - llvm release
                command: sh ./bin/run-server-client_dynamically.sh
            - run:
                name: Debug build llvm
                command: sh ./bin/make_smts.sh
                environment:
                    CMAKE_BUILD_TYPE: Debug
                    FLAGS: -Wall -Wextra -Werror=sign-compare -Wunused-lambda-capture -fsanitize=signed-integer-overflow,thread,undefined
            - run:
                name: Run Server - Client
                command: sh ./bin/run-server-client.sh

    build-macos:
      macos:
        xcode: 15.4.0
      resource_class: macos.m1.medium.gen1
      steps:
        - run:
            name: Packages
            command: |
              brew install cmake
              brew install gmp
              brew install bison
              brew install flex
        - checkout
        - run:
            name: Store path
            command: echo 'export PATH=/opt/homebrew/opt/flex/bin:/opt/homebrew/opt/bison/bin:$PATH' >> $BASH_ENV
        - run:
            name: Debug build OS X With Address Sanitizer
            command: sh ./bin/make_smts.sh
            environment:
              CMAKE_BUILD_TYPE: Debug
              FLAGS: -Wall -Wextra -fsanitize=signed-integer-overflow,address,undefined

        - run:
            name: Release build OS X with Thread Sanitizer
            command: sh ./bin/make_smts.sh
            environment:
              CMAKE_BUILD_TYPE: Release
              FLAGS: -Wall -Wextra -fsanitize=signed-integer-overflow,thread,undefined

workflows:
  build-test:
      jobs:
        - build-current
        - build-macos
